--Initial configs
monitorID = 2


function explode(div,str) -- credit: http://richard.warburton.it
  if (div=='') then return false end
  local pos,arr = 0,{}
  -- for each divider found
  for st,sp in function() return string.find(str,div,pos,true) end do
    table.insert(arr,string.sub(str,pos,st-1)) -- Attach chars left of current divider
    pos = sp + 1 -- Jump past current divider
  end
  table.insert(arr,string.sub(str,pos)) -- Attach chars right of last divider
  return arr
end


function drawScreen()
status = {}
status[1] = {name="Startup" } 
status[2] = {name="Clearing area" }
status[3] = {name="Placing chests"}
status[4] = {name="Building Floor" }
status[5] = {name="Build walls" }
status[6] = {name="Build roof" }
status[7] = {name="Complete" }
mon = peripheral.wrap("top")

--Display info

		mon.clear()
		mon.setTextScale(1)
		mon.setCursorPos(1,1)
		mon.write("Current Mode: "..tostring(state).." "..status[state].name)
		mon.setCursorPos(3,2)
		mon.write("Fuel Level: "..tostring(fuel))
		mon.setCursorPos(25,2)
		mon.write("Design: "..tostring(mode))
		mon.setCursorPos(1,3)
		mon.write("Current Location (from home base)")
		mon.setCursorPos(1,4)
		mon.write("X: "..tostring(x))
		mon.setCursorPos(10,4)
		mon.write("Left / Right")
		
		mon.setCursorPos(1,5)
		mon.write("Y: "..tostring(y))
		mon.setCursorPos(10,5)
		mon.write("Up / Down")
		
		mon.setCursorPos(1,6)
		mon.write("Z: "..tostring(z))
		mon.setCursorPos(10,6)
		mon.write("Forward / Back")
		
		mon.setCursorPos(1,7)
		local d = {"Forward / North (+Z)","Right / East (+X)","Back / South (-Z)","Left / West (-X)"}
		mon.write("F: "..tostring(face))
		mon.setCursorPos(10,7)
		mon.write(tostring(d[face+1]))

		mon.setCursorPos(1,9)
		mon.write("Message from function")
		mon.setCursorPos(1,10)
		mon.write(dispMsg)


		term.clear()
		term.setCursorPos(1,1)
		term.write("Current Mode: "..tostring(state).." "..status[state].name)
		term.setCursorPos(3,2)
		term.write("Fuel Level: "..tostring(fuel))
		term.setCursorPos(25,2)
		term.write("Design: "..tostring(mode))
		term.setCursorPos(1,3)
		term.write("Current Location (from home base)")
		term.setCursorPos(1,4)
		term.write("X: "..tostring(x))
		term.setCursorPos(10,4)
		term.write("Left / Right")
		
		term.setCursorPos(1,5)
		term.write("Y: "..tostring(y))
		term.setCursorPos(10,5)
		term.write("Up / Down")
		
		term.setCursorPos(1,6)
		term.write("Z: "..tostring(z))
		term.setCursorPos(10,6)
		term.write("Forward / Back")
		
		term.setCursorPos(1,7)
		local d = {"Forward / North (+Z)","Right / East (+X)","Back / South (-Z)","Left / West (-X)"}
		term.write("F: "..tostring(face))
		term.setCursorPos(10,7)
		term.write(tostring(d[face+1]))

		term.setCursorPos(1,9)
		term.write("Message from function")
		term.setCursorPos(1,10)
		term.write(dispMsg)
print("")
end

running = true
term.clear()
term.setCursorPos(1,1)
print("Listening for updates")

for n,m in ipairs(rs.getSides()) do rednet.open(m) end -- Opens all rednet sides.
while running do
  event, id, text = os.pullEvent()
  if event == "rednet_message" then
    data = explode(";",text)
			state = tonumber(data[1])
			fuel = data[2]
			mode = data[3]
			x = data[4]
			y = data[5]
			z = data[6]
			face = data[7]
			dispMsg = data[8] 
		drawScreen()
  end
end



